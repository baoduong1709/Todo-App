<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Todo App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/affd473cba.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/stylesheets/style.css" />
</head>

<body>

    <div class="navbar row" id="navbar">
        <div class="logo col-8"  onclick="location.href='/task/view'">
            TODOAPP
        </div>
        <div class="menu col-2">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search" id="searchInput">
            </div>
            <div>
                <div id="searchResultsList">

                </div>
            </div>

        </div>
        <div class="btn-group name col-2">
            <button type="button" class="btn btn-danger"><%= name %></button>
            <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                <span class="visually-hidden">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <button type="button" class="dropdown-item" onclick="logout()">Log out</button>
            </ul>
        </div>

    </div>
    <div class="container-xxl">
        <div class="row mt-3">
            <div class="col-3 row">
                <div class="col-3">
                    <button type="button" class="btn btn-primary" onclick="filterAtoZ()">A-Z</button>
                </div>
                <div class="col-3">
                    <button type="button" class="btn btn-primary" onclick="filterZtoA()">Z-A</button>
                </div>
            </div>
            <div class="col-8"></div>
            <div class="col-1">
                <button type="button" class="btn btn-primary mb-3 " data-bs-toggle="modal" data-bs-target="#createModal" style="margin-left: 70%;">
                    Add
                </button>
            </div>
        </div>
        <%- include('../tasks/createTask.ejs'); %>
        <div class="row" style="height: 480px;">
            <div class="col bg-light mx-2">
                <div class="title-time mt-2">
                    <p>Todo</p>
                </div>
                <table class="table table-hover table-white table-sm">
                    <tbody id="page">
                        <% tasksTodo.forEach(function(task) { %>
                        <tr class="border border-5 border-light" id="<%= task.id %>">
                            <td class="col-9 ps-3" onclick="updateTask('<%= JSON.stringify(task) %>')" data-bs-toggle="modal" data-bs-target="#updateModal">
                                <div class="d-flex align-items-start flex-column bd-highlight" style="height:auto;">
                                    <div class="mb-auto bd-highlight title"><%= task.title %></div>
                                    <% var priorityName = priorityTable.find(function(priority) {return priority.id == task.priority_id;}); %>
                                    <div class="bd-highlight priority"><%= priorityName.name %></div>
                                    <div class="bd-highlight due_date"><%= new Date(task.due_date).toISOString().slice(0,16).replace('T',' ') %></div>
                                </div>
                            </td>
                            <%- include('../tasks/updateTask.ejs') %>
                            <td>
                                <div class="d-flex justify-content-end">
                                    <button onclick="updateStatusTask('<%= task.id %>','<%= task.status_id %>',1)" class="icon-button me-2">
                                        <i class="fa-solid fa-caret-right fa-4x"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>

            </div>
            <div class="col bg-light mx-2">
                <div class="title-time mt-2">
                    <p>Inprogress</p>
                </div>
                <table class="table table-hover table-white table-sm">
                    <tbody>
                        <% tasksInprogress.forEach(function(task) { %>
                        <tr class="border border-5 border-light" id="<%= task.id %>">
                            <td class="col-9 ps-3" onclick="updateTask('<%= JSON.stringify(task) %>')" data-bs-toggle="modal" data-bs-target="#updateModal">
                                <div class="d-flex align-items-start flex-column bd-highlight">
                                    <div class="mb-auto bd-highlight title"><%= task.title %></div>
                                    <% var priorityName = priorityTable.find(function(priority) {return priority.id == task.priority_id;}); %>
                                    <div class="bd-highlight priority"><%= priorityName.name %></div>
                                    <div class="bd-highlight due_date"><%= new Date(task.due_date).toISOString().slice(0,16).replace('T',' ') %></div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex justify-content-end">
                                    <button onclick="updateStatusTask('<%= task.id %>','<%= task.status_id %>',-1)" class="icon-button">
                                        <i class="fa-solid fa-caret-left fa-4x"></i>
                                    </button>
                                    <button onclick="updateStatusTask('<%= task.id %>','<%= task.status_id %>',1)" class="icon-button me-2">
                                        <i class="fa-solid fa-caret-right fa-4x"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
            <div class="col bg-light mx-2">
                <div class="title-time mt-2">
                    <p>Completed</p>
                </div>
                <table class="table table-hover table-white table-sm">
                    <tbody>
                        <% tasksCompleted.forEach(function(task) { %>
                        <tr class="border border-5 border-light" id="<%= task.id %>">
                            <td class="col-9 ps-3" onclick="updateTask('<%= JSON.stringify(task) %>')" data-bs-toggle="modal" data-bs-target="#updateModal">
                                <div class="d-flex align-items-start flex-column bd-highlight">
                                    <div class="mb-auto bd-highlight title"><%= task.title %></div>
                                    <% var priorityName = priorityTable.find(function(priority) {return priority.id == task.priority_id;}); %>
                                    <div class="bd-highlight priority"><%= priorityName.name %></div>
                                    <div class="bd-highlight due_date"><%= new Date(task.due_date).toISOString().slice(0,16).replace('T',' ') %></div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex justify-content-end">
                                    <button onclick="updateStatusTask('<%= task.id %>','<%= task.status_id %>',-1)" class="icon-button">
                                        <i class="fa-solid fa-caret-left fa-4x"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <nav aria-label="Page navigation example">
                <ul class="pagination mt-3">
                    <li class="page-item"><a class="page-link" onclick="nextPage(1)">1</a></li>
                    <li class="page-item"><a class="page-link" onclick="nextPage(2)">2</a></li>
                    <li class="page-item"><a class="page-link" onclick="nextPage(3)">3</a></li>
                    <li class="page-item"><a class="page-link" onclick="nextPage(4)">4</a></li>
                </ul>
            </nav>
        </div>
    </div>
    <script>
        function filterAtoZ() {
            var urlParams = new URLSearchParams(window.location.search);
                urlParams.set('filter', 'ASC');
                var newUrl = window.location.pathname + '?' + urlParams.toString();
                window.location.href = newUrl;
        }
        function filterZtoA() {
            var urlParams = new URLSearchParams(window.location.search);
                urlParams.set('filter', 'DESC');
                var newUrl = window.location.pathname + '?' + urlParams.toString();
                window.location.href = newUrl;
        }

        function nextPage(page) {
            var urlParams = new URLSearchParams(window.location.search);
            urlParams.set('page', page);
            var newUrl = window.location.pathname + '?' + urlParams.toString();
            window.location.href = newUrl;
        }

        function updateStatusTask(task_id, status_id, x) {
            fetch("/task/update/status/" + task_id, {
                    method: "post",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        status_id,
                        task_id,
                        x
                    }),
                })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Update task không thành công");
                    }
                    location.reload()
                })
                .catch((error) => console.error("Lỗi:", error));
        }

        function convertJSONtoHTML(jsonString) {
            return jsonString.replace(/"/g, '&quot;');
        }

        function updateTask(task) {
            console.log(task);
            var newTask = JSON.parse(task);
            console.log(newTask);
            var taskId = newTask.id;
            const deleteButton = document.getElementById("deleteButton");
            deleteButton.dataset.taskId = taskId;
            const dueDate = new Date(newTask.due_date);
            const formattedDueDate = dueDate
                .toISOString()
                .slice(0, 19)
                .replace("T", " ");
            document.getElementById("titleU").value = newTask.title;
            document.getElementById("descriptionU").value =
                newTask.description;
            document.getElementById("priorityU").value = newTask.priority_id;
            document.getElementById("due_dateU").value = formattedDueDate;
            const formUpdate = document.getElementById("update_task");
            formUpdate.addEventListener("submit", async (event) => {
                event.preventDefault();
                const formData = new FormData(formUpdate);
                const title = formData.get("title");
                const description = formData.get("description");
                const due_date = formData.get("due_date");
                const priority1 = formData.get("priority1");
                try {
                    const response = await fetch("/task/update/" + taskId, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({
                            title,
                            description,
                            due_date,
                            priority1,
                        }),
                    });
                    if (!response.ok) {
                        throw new Error("Đã xảy ra lỗi khi tạo task");
                    }
                    location.reload();
                } catch (error) {
                    console.error("Lỗi:", error);
                }
            });
        }

        function deleteTask() {
            Swal.fire({
                title: "Do you want to delete the task?",
                showDenyButton: true,
                showCancelButton: true,
                showConfirmButton: false,
                confirmButtonText: "Save",
                denyButtonText: `Delete`
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire("Saved!", "", "success");
                } else if (result.isDenied) {
                    confirmDelete();
                }
            });
        }

        function confirmDelete() {
            const deleteButton = document.getElementById("deleteButton");
            const taskId = deleteButton.dataset.taskId;
            const closeButton = document.getElementById('closeModal');
            if (closeButton) {
                closeButton.click();
            }
            fetch("/task/delete/" + taskId, {
                    method: "DELETE",
                })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Xóa task không thành công");
                    }
                    const closeButton = document.getElementById('closeModal');
                    if (closeButton) {
                        closeButton.click();
                    }
                    location.reload()

                })
                .catch((error) => console.error("Lỗi:", error));
        }
        document.getElementById('searchInput').addEventListener('input', function() {
            var searchTerm = this.value.trim();
            if (searchTerm.length >= 2) {
                searchInDatabase(searchTerm);
            } else {
                clearSearchResults();
            }
        });

        function clearSearchResults() {
            var searchResultsList = document.getElementById('searchResultsList');
            searchResultsList.innerHTML = '';
        }

        function searchInDatabase(keyword) {
            fetch('view/search?term=' + keyword)
                .then(response => response.json())
                .then(data => {
                    displaySearchResults(data);
                })
                .catch(error => {
                    console.error('Lỗi khi tìm kiếm:', error);
                });
        }

        function displaySearchResults(results) {
            var searchResultsList = document.getElementById('searchResultsList');
            searchResultsList.innerHTML = '';

            if (results.length === 0) {
                var noResultsItem = document.createElement('div');
                noResultsItem.textContent = 'Không tìm thấy kết quả.';
                searchResultsList.appendChild(noResultsItem);
            } else {
                console.log(results);
                results.forEach(function(task) {
                    var listItem = document.createElement('div');
                    listItem.textContent = task.title;
                    listItem.classList.add('resultSearch');
                    listItem.setAttribute('data-bs-toggle', 'modal');
                    listItem.setAttribute('data-bs-target', '#updateModal');
                    listItem.addEventListener('click', function() {
                        updateTask(task);
                    });
                    searchResultsList.appendChild(listItem);
                });

            }
        }

        function logout() {
            fetch('/user/logout', {
                    method: "get"
                })
                .then(
                    window.location.href = '/user/login'
                )
        }
    </script>
</body>

</html>