<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/stylesheets/style.css" />
</head>

<body>
    <div class="d-flex justify-content-center">
        <form method="post" action="/user/login" id="form_login" class="login">
            <div class="container p-3">
                <div class="mb-3 col-12">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" name="email" class="form-control" id="email" aria-describedby="emailHelp">
                </div>
                <div class="mb-3 col-12">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" name="password" class="form-control" id="password">
                </div>
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
            <div>
                <a href="http://localhost:3000/user/create">adsda</a>
            </div>
        </form>
    </div>
    <script>
        const formLogin = document.getElementById('form_login');
        formLogin.addEventListener('submit', async (event) => {
            event.preventDefault();
            const formData = new FormData(formLogin);
            const email = formData.get('email');
            const password = formData.get('password');
            try {
                const response = await fetch('/user/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ password, email })
                });
                if (response.status === 401) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });
                    Toast.fire({
                        icon: "warning",
                        title: "Invalid Email or Password!"
                    });
                } else {
                    window.location.href = '/task/view';
                }
            } catch (error) {
                console.error('Lá»—i:', error);
            }
        });
    </script>
</body>

</html>